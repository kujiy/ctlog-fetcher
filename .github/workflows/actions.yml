name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:9.4
        env:
          MYSQL_ROOT_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_DATABASE: ct
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done
        echo "MySQL is ready!"
    
    - name: Set up test database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -e "CREATE DATABASE IF NOT EXISTS ct;"
        mysql -h 127.0.0.1 -P 3306 -u root -e "SHOW DATABASES;"
    
    - name: Create config files
      run: |
        # Create config.py from example
        cp src/config.py.example src/config.py
        
        # Create config_secret.py with test database URL
        cat > src/config_secret.py << EOF
        # Test configuration for GitHub Actions
        MYSQL_URL = "mysql+aiomysql://root:@127.0.0.1:3306/ct"
        EOF
    
    - name: Create database tables
      env:
        MYSQL_URL: "mysql+aiomysql://root:@127.0.0.1:3306/ct"
        PYTHONPATH: ${{ github.workspace }}
      run: |
        python src/manager_api/models.py
    
    - name: Run tests
      env:
        MYSQL_URL: "mysql+aiomysql://root:@127.0.0.1:3306/ct"
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest tests/ -v --tb=short
    
    - name: Run tests with coverage (optional)
      env:
        MYSQL_URL: "mysql+aiomysql://root:@127.0.0.1:3306/ct"
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pip install pytest-cov
        pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov (optional)
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
